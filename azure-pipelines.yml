# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-20.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

#Setup the database
- script: "docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Rand0mP4$s11' -d -p 1433:1433 --name MSSQLSERVER -d mcr.microsoft.com/mssql/server:2019-latest"
  displayName: 'Set up a simple docker based MSSQL database'
- script: "sqlcmd -S localhost -U SA -P 'Rand0mP4$s11' -i ./SQL/DB.sql;"
  displayName: 'Create the target DB'
- script: "sqlcmd -S localhost -U SA -P 'Rand0mP4$s11' -i ./SQL/Sale.sql;"
  displayName: 'Create the Sale Table' 


#Build
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'


#UnitTest
- script: 'dotnet tests/DevOpsChallenge.SalesApi.Business.UnitTests/bin/Release/net5.0/DevOpsChallenge.SalesApi.Business.UnitTests.dll'
  displayName: 'Unit Tests'

#IntegrationTests
- script: 'dotnet tests/DevOpsChallenge.SalesApi.IntegrationTests/bin/Release/net5.0/DevOpsChallenge.SalesApi.IntegrationTests.dll'
  displayName: 'Integration Tests'


#Publish Artifacts
- script: 'mkdir toSend;cp SQL/* toSend/;mkdir toSend/ansible; cp -r ansible/* toSend/ansible/;mkdir toSend/build;tar cvzf toSend/build/todeploy.tar.gz src/DevOpsChallenge.SalesApi/bin/Release/net5.0/'
  displayName: 'SetupArtifact'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'toSend'
    ArtifactName: 'items'
    publishLocation: 'Container'
    StoreAsTar: true
